@model DiscoveryCenter.Models.ReportsViewModel

@{
    ViewBag.Title = "Report for " + @Model.SurveyName;
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}
@Scripts.Render("~/bundles/Admin")

<h2>Report For Survey: @Model.SurveyName</h2>
<br/>

<a id="ExportDialog" class="btn btn-default">Download This Report</a>

<script>
    var dataForCharts = [];
    var dataForChartsCount = @Model.Reports.Count;
</script>

@for (int i = 0; i < @Model.Reports.Count; i++)
{
    <h4>Question: @Model.Reports[i].Text</h4>
    // Transform the Dictionary<string,int> to JSON in [ "string", int ] form
    var entries = @Model.Reports[i].Counts.Select(d =>
        string.Format("[\"{0}\", {1}]", d.Key, string.Join(",", d.Value)));
    var result = "[" + string.Join(",", entries) + "]";
    //<p>DEBUG result: @result</p>
    
    // Create the div for the chart for this question
    var divId = "chartdiv" + @Model.Reports[i].QuestionIndex;
    <div id="@divId" style="height:400px;width:400px; "></div>

    // Add this data to the dataForCharts array to be referenced later. HTML.Raw is used to avoid encoding
    <script>dataForCharts[@Model.Reports[i].QuestionIndex] = JSON.parse('@Html.Raw(result)');</script>
}

@using(Html.BeginForm("ExportToCSV", "Report", FormMethod.Post, new { @id="dialog-form", @title="Download Options" }))
{
    @Html.Hidden("id", @Model.SurveyId)
    @Html.RadioButton("dateRadio", "noDate", true, new { @id = "noDate" })
    @Html.Label("Export All Data") <br />

    @Html.RadioButton("dateRadio", "date", false, new { @id = "date" })
    @Html.Label("Only Export Data in Date Range") <br />
    <div style="padding-left:2em">
        <span style="float:left">Start Date</span>
        @Html.TextBox("startDate")
        <span style="float:left">End Date</span>
        @Html.TextBox("endDate")
    </div>

    @Html.CheckBox("exportRawData", true)
    @Html.Label("Include Raw Data") <br />
    <input type="submit" value="Download Report" id="submitBtn"/>
}

<script>
    $(document).ready(function(){
        // Questions were put into array based on their QuestionIndex value, which is >= 1 so start i=1
        for(var i = 1; i < dataForCharts.length; i++)
        {
            var data = dataForCharts[i];
            if (data == null || data.length == 0)
            {
                $('#chartdiv' + i).replaceWith('<p>No Data for this question</p>');
            }
            else
            {
                var plot = $.jqplot('chartdiv' + i, [data],
                    {
                        seriesDefaults: {
                            // Make this a pie chart.
                            renderer: $.jqplot.PieRenderer,
                            rendererOptions: {
                                // Put data labels on the pie slices.
                                // By default, labels show the percentage of the slice.
                                showDataLabels: true
                            }
                        },
                        legend: { 
                            show:true,
                            location: 'e',
                            placement: 'outside'
                        }
                    }
                );
            }
        }
        dialog = $( "#dialog-form" ).dialog({
            autoOpen: false,
            height: 300,
            width: 350,
            modal: true
        });

        $( "#ExportDialog" ).on( "click", function() {
            dialog.dialog( "open" );
        });

        // Enable Date Picker
        $( "#startDate" ).datepicker();
        $( "#endDate" ).datepicker();

        // Today
        var defaultEndDate = new Date();
        // 30 Days ago
        var defaultStartDate = new Date();
        defaultStartDate.setDate(defaultStartDate.getDate() - 30);

        $( "#startDate" ).val($.datepicker.formatDate('m/dd/yy', defaultStartDate));
        $( "#endDate" ).val($.datepicker.formatDate('m/dd/yy', defaultEndDate));

        // Make sure the dates are initially disabled, since "no date range" is selected by default
        $( "#startDate" ).prop('disabled', true);
        $( "#endDate" ).prop('disabled', true);

        // Radio buttons
        // When date is checked, enable date picking
        $( "#date" ).change(function () {
            if ($( "#date" ).is(':checked')) {
                $( "#startDate" ).prop('disabled', false)
                $( "#endDate" ).prop('disabled', false)
            }
        });

        // When noDate is checked, disable date picking
        $( "#noDate" ).change(function () {
            if ($( "#noDate" ).is(':checked')) {
                $( "#startDate" ).prop('disabled', true)
                $( "#endDate" ).prop('disabled', true)
            }
        });

        $( '#dialog-form' ).submit(function() {
            dialog.dialog("close");
        });
    });
</script>
