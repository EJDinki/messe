@model DiscoveryCenter.Models.Exhibit

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

@{
    List<SelectListItem> storedImageNames = new List<SelectListItem>();
    storedImageNames.Add(new SelectListItem() { Text = "None", Value = "" });

    foreach (string image in Directory.GetFiles(Server.MapPath("~/Content/images/exhibits")))
    {
        string val = "/Content/images/exhibits/" + Path.GetFileName(image);
        storedImageNames.Add(new SelectListItem() { Text = Path.GetFileName(image), Value = val });
    } 
}

<br/>
<div class="col-md-offset-2 col-md-8 panel panel-default">
    <div class="panel-body ">
        <h2>Create New Exhibit</h2>

        @using (Html.BeginForm("Create", "Exhibits", FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextAreaFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <label for="file" class="control-label col-md-2">Choose Icon</label>
                    <div class="col-md-6">
                        @Html.DropDownListFor(m => m.ImageLocation, storedImageNames, new { id = "Image" })
                        @Html.ValidationMessage("Image", new { @class = "text-danger" })                       
                    </div>

                    <div class="col-md-4 col-md-offset-1">
                        <label for="icon" class="control-label">Icon Preview</label>
                        <img id="icon" src="" height="64" width="64">
                    </div>
                </div>
                
                <!-- Debating on whether or not ShowcaseImage is needed
                <div class="form-group">
                    <label for="file" class="control-label col-md-2">Upload Showcase Image</label>
                    <div class="col-md-6">
                        <input type="file" name="ShowcaseImage" id="ShowcaseImage" style="width: 100%;" accept="image/*" />
                        @Html.ValidationMessage("ShowcaseImage", new { @class = "text-danger" })
                    </div>
                </div>-->

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Create" class="btn btn-default" />
                    </div>
                </div>
            </div>
        }

        <div>
            @Html.ActionLink("Back to List", "Index")
        </div>
    </div>
</div>
<script>
    $("#Image").change(function () {
        $('#icon').attr('src', $(this).val());
    });
</script>
        @section Scripts {
            @Scripts.Render("~/bundles/jqueryval")
        }
