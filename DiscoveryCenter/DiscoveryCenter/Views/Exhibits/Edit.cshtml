@model DiscoveryCenter.Models.Exhibit

@{
    ViewBag.Title = "Edit";
}

@{
    List<SelectListItem> storedImageNames = new List<SelectListItem>();
    storedImageNames.Add(new SelectListItem() { Text = "None", Value = "" });

    foreach (string image in Directory.GetFiles(Server.MapPath("~/Content/images/exhibits")))
    {
        string val = "/Content/images/exhibits/" + Path.GetFileName(image);
        if(Model.ImageLocation == null)
        {
            storedImageNames.Add(new SelectListItem() { Text = Path.GetFileName(image), Value = val });
        }
        else
        {
            bool selected = ( val==Model.ImageLocation);
            storedImageNames.Add(new SelectListItem() { Text = Path.GetFileName(image), Value = val, Selected=selected });
        }
    }
}
<div class="panel" style="margin-bottom:0">
    <div class="">
        @using (Html.BeginForm("Edit", "Exhibits"))
        {
            <div class="modal-header">
                <h3 style="margin:0;">Edit Exhibit</h3>
            </div>
            <div class="modal-body">
                @Html.AntiForgeryToken()
                @Html.Hidden("CreateDate", Model.CreateDate.ToString("MM/dd/yyy hh:mm:ss"))
                @Html.HiddenFor(m => m.ImageLocation)
                @Html.HiddenFor(m => m.Id)
                <div class="form-horizontal">
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    @Html.HiddenFor(model => model.Id)

                    <div class="form-group">
                        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-9">
                            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-9">
                            @Html.TextAreaFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <label for="Image" class="control-label col-md-3">Choose Icon</label>
                        <div class="col-md-6">
                            @Html.DropDownListFor(m => m.ImageLocation, storedImageNames, new { Name = "BrokenWorkaround", id = "Image", @class = "form-control" })
                            @Html.ValidationMessage("Image", new { @class = "text-danger " })
                        </div>

                        <div class="col-md-3">
                            <img id="icon" src="@Model.ImageLocation" height="64" width="64" class="pull-left">
                        </div>
                    </div>
                    @Html.ValidationMessage("ShowcaseImage", new { @class = "text-danger" })
                </div>
            </div>
            <div class="modal-footer">
                <button id="save" name="save" type="submit" class="btn btn-primary"><span class="glyphicon glyphicon-floppy-save"></span> Save</button>
                <button type="submit" class="btn btn-default" data-dismiss="modal">Cancel</button>
            </div>
        }
    </div>
</div>

<script>
    $('#Image').change(function () {
        $('#icon').attr('src', $(this).val());
    });
</script>

        @section Scripts {
            @Scripts.Render("~/bundles/jqueryval")
        }
