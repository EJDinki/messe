@model DiscoveryCenter.Models.CreationEditViewModel
@using DiscoveryCenter.Models;

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

@using (Html.BeginForm("Edit", "Creation", FormMethod.Post, new {@class="clearfix"}))
{
    @Html.AntiForgeryToken()
    <div class="panel panel-body panel-default fixed-sidebar">
        <h2>Edit Survey</h2>

        <a class="btn btn-primary" href="@Url.Action("BlankQuestionRow", "Creation", new {id=Model.Survey.Id })" id="addItem">
            <i class='glyphicon glyphicon-plus'></i> Add Question
        </a>

        <div class="form-group clearfix">
            <div class="col-md-12" style="padding-left:0px">
                <h4>Survey Name</h4>
                @Html.EditorFor(model => model.Survey.Name, new { htmlAttributes = new { @class = "form-control" } })
                <h4>Survey Description</h4>
                @Html.TextAreaFor(model => model.Survey.Description, 5, 80, new { htmlAttributes = new { @class = "form-control" } })

                <h4>Theme</h4>
                @Html.DropDownListFor(model => model.Survey.ThemeId, Model.Themes, new { @class = "form-control" })

                @Html.ValidationMessageFor(model => model.Survey.Name, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="top-divider">
            @if (!this.ViewData.ModelState.IsValid)
            {
                @Html.ValidationSummary("Survey contains errors.", new { id = "valSum", @class = "text-danger pull-right" })
            }
            <center>
                <button id="save" name="save" type="submit" class="btn btn-default" onclick="savePressed = true"><span class="glyphicon glyphicon-floppy-save"></span> Save</button>
                <a class="btn btn-default" href="~/"><span class="glyphicon glyphicon-list-alt"></span> Back To List</a>
            </center>
        </div>
    </div>


    <div class="edit-main-panel-wrapper">
        <div class="form-horizontal panel panel-body edit-main-panel clearfix">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.Survey.Id)
            @Html.HiddenFor(model => model.Survey.CreateDate)

            <div id="questionDivList">
                <div id="tip">
                    @Html.ValidationMessage("Questions", new { @class = "text-danger" })
                    <h2>No Questions in survey.</h2>
                    <h3><span class="glyphicon glyphicon-arrow-left"></span> Press '+Add Question' to add a question</h3>
                </div>
                <ul id="draggablePanelList" class="list-unstyled">
                    @for (int i = 0; i < Model.Survey.Questions.Count; i++)
                    {
                        @Html.Partial("Question", Model.Survey.Questions[i])
                    }
                </ul>
            </div>
        </div>
    </div>
    
}

@section scripts{
    <script>
        NoQuestions();

        savePressed = false;
        //get form data before changes
        var serialized = $('form').serialize();
        $(window).bind('beforeunload', function (e) {
            //compare the form data with current to see if there were changes
            if (!savePressed && $('form').serialize() != serialized)
                return "All survey changes will be discarded.";
            else e = null; // i.e; if form state change show box not.
        });
    </script>
}

