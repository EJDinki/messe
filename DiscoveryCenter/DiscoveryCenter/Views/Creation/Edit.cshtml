@model DiscoveryCenter.Models.Survey
@using DiscoveryCenter.Models;

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

@using (Html.BeginForm("Edit", "Creation", FormMethod.Post, new {@class="clearfix"}))
{
    @Html.AntiForgeryToken()
    <br />
    <div class="col-md-3 clearfix">
        <div class="panel panel-body panel-default fixed">
            <h2>Edit Survey</h2>

            <div class="form-group clearfix">
                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="top-divider">
                <center>
                    <a class="btn btn-default" href="/Creation/BlankQuestionRow/0?surveyId=@Model.Id" id="addItem">
                        <i class='glyphicon glyphicon-plus'></i> Add Question
                    </a>
                    <button id="save" type="submit" class="btn btn-default"><span class="glyphicon glyphicon-floppy-save"></span> Save</button>
                </center>
            </div>
            <div>
                @Html.ActionLink("Back to List", "Index")
            </div>
        </div>
    </div>


    <div class="form-horizontal col-md-9 panel panel-body panel-default clearfix">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)
        @Html.HiddenFor(model => model.CreateDate)

        <div id="questionDivList">
            <div id="tip">
                @Html.ValidationMessage("Questions", new { @class = "text-danger" })
                <h2>No Questions in survey.</h2>
                <br>
                <h3><span class="glyphicon glyphicon-arrow-left"></span> Press '+Add Question' to add a question</h3>
            </div>
            <ul id="draggablePanelList" class="list-unstyled">
                @for (int i = 0; i < Model.Questions.Count; i++)
                {
                    @Html.Partial("Question", new Tuple<int, Question>(i, Model.Questions[i]))
                }
            </ul>
        </div>
    </div>
}



@section scripts
{
    <script>
        
        $("#addItem").click(function() {
        $.ajax({
            url: this.href,
            cache: false,
            success: function (html) {
                $("#draggablePanelList").append(html);
                UpdatePanels();
                NoQuestions()
            }
        });
        return false;
        });

        NoQuestions();
        function NoQuestions()
        {
            if ($("#draggablePanelList").html().trim() == "") {
                $(tip).show();
                $(addItem).removeClass("btn-default");
                $(addItem).addClass("btn-success");

                $("#save").removeClass("btn-success");
                $("#save").addClass("btn-default");
            }
            else {
                $(tip).hide();
                $(addItem).removeClass("btn-success");
                $(addItem).addClass("btn-default");

                $("#save").removeClass("btn-default");
                $("#save").addClass("btn-success");
            }
        }

        //---------------draggable panel---------------------
        var panelList = $('#draggablePanelList');
        panelList.sortable({
            // Only make the .panel-heading child elements support dragging.
            // Omit this to make then entire <li>...</li> draggable.
            handle: '.panel-heading',
            update: function (event, ui) { UpdatePanels(); },

        });

        function UpdatePanels() {
            $('.panel', panelList).each(function (index, elem) {
                var $listItem = $(elem),
                    newIndex = $listItem.index();
                
                $(elem).find("Input.IndexInSurvey").each(function (index, elem) {
                    $(elem).val(newIndex + 1);
                });

                $(elem).find("span.IndexInSurvey").each(function (index, elem) {
                    $(elem).html(newIndex + 1);
                });
                
            });
        }
    </script>
}
