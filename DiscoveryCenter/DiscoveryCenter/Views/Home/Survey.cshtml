@model DiscoveryCenter.Models.SurveyViewModel
@using DiscoveryCenter.Models

@{
    ViewBag.Title = "Home Page";
    Layout = "~/Views/Shared/_SurveyLayout.cshtml";
}
@using (Html.BeginForm("Survey", "Home", FormMethod.Post))
{
    <div class="jumbotron">
        <h1>Survey Details</h1>
    
        <br/>

        <!-- Left and right controls -->
        <a class="left carousel-control pull-left" href="#myCarousel" role="button" data-slide="prev">
            <span class="glyphicon glyphicon-chevron-left" aria-hidden="true"></span>
            <span class="sr-only">Previous</span>
        </a>
        <a class="right carousel-control pull-right" href="#myCarousel" role="button" data-slide="next">
            <span class="glyphicon glyphicon-chevron-right" aria-hidden="true"></span>
            <span class="sr-only">Next</span>
        </a>
    
        @Html.HiddenFor(m => m.SurveyId)  
        <div id="myCarousel" class="carousel slide" data-ride="carousel" data-interval="false">
            <!-- Indicators -->
            <div class="carousel-controls center">
                <ol class="carousel-indicators">
                    <li data-target="#myCarousel" data-slide-to="0" class="active"></li>
                    @for (int i = 1; i < @Model.QuestionModels.Count; i++)
                    {
                        <li data-target="#myCarousel" data-slide-to="@i"></li>
                    }
                </ol>
            </div>

            <!-- Wrapper for slides -->
            <div class="carousel-inner" role="listbox">
                @for (int i = 0; i < @Model.QuestionModels.Count; i++)
                {
                    string val = i == 0 ? "item active" : "item";
                    <div class="@val">
                            @Html.HiddenFor(m => m.QuestionModels[i].Question)
                            @Html.HiddenFor(m => m.QuestionModels[i].QuestionId)

                            @switch (Model.QuestionModels[i].Type)
                            {
                                case (Question.QuestionType.MultipleChoiceChooseOne):
                                    <p>@Model.QuestionModels[i].Question</p>
                                    @(Html.Partial("MultipleChoiceChooseOne", Model.QuestionModels[i]))
                                    break;

                                case (Question.QuestionType.MultipleChoiceChooseMany):
                                <p>@Model.QuestionModels[i].Question</p>
                                @(Html.Partial("MultipleChoiceChooseMany", Model.QuestionModels[i]))
                                    break;

                                case (Question.QuestionType.ShortAnswer):
                                <p>@Model.QuestionModels[i].Question</p>
                                    @Html.TextAreaFor(m => m.QuestionModels[i].Answer)
                                    break;

                                default:
                                @Html.HiddenFor(m => m.QuestionModels[i].Answer)
                                    break;
                            }
                            @Html.HiddenFor(m => m.QuestionModels[i].Type)
                    </div>
                }
            </div>
        </div>
    </div>
    <div class="bottom">
        <center>
            <input type="submit" class="btn btn-default" value="Complete Survey" />
            <a href="/" class="btn btn-default">Exit Survey</a>
        </center>
    </div>
}



