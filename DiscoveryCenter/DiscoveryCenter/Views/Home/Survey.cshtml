@model DiscoveryCenter.Models.SurveyViewModel
@using DiscoveryCenter.Models

@{
    ViewBag.Title = "Home Page";
    Layout = "~/Views/Shared/_SurveyLayout.cshtml";
}
@using (Html.BeginForm("Survey", "Home", FormMethod.Post))
{
<<<<<<< HEAD
    <div class="jumbotron" >
        @*<img src="~/Content/images/discovery.png" />*@
        <img src="~/Content/images/discovery75.png" />
        @*<img src="~/Content/images/discovery50.png" />*@
=======
    <div class="jumbotron">
        <img src="~/Content/discovery.png" style="height:15%;width:15%">
>>>>>>> 20cc4940625b5557a26547bd1d958483a6ede0c9
        <span id="alert" class="alert alert-danger top" role="alert" hidden style="position: absolute;"></span>

        <br />

        <!-- Left and right controls -->
        <a class="left carousel-control pull-left" href="#myCarousel" role="button" data-slide="prev">
            <span class="glyphicon glyphicon-chevron-left" aria-hidden="true"></span>
            <span class="sr-only">Previous</span>
        </a>
        <a class="right carousel-control pull-right" href="#myCarousel" role="button" data-slide="next">
            <span class="glyphicon glyphicon-chevron-right" aria-hidden="true"></span>
            <span class="sr-only">Next</span>
        </a>

        @Html.HiddenFor(m => m.SurveyId)
        <div id="myCarousel" class="carousel slide" data-ride="carousel" data-interval="false">
            <!-- Indicators -->
            <div class="carousel-controls center">
                <ol class="carousel-indicators">
                    <li data-target="#myCarousel" data-slide-to="0" class="active"></li>
                    @for (int i = 1; i < @Model.QuestionModels.Count; i++)
                    {
                        <li data-target="#myCarousel" data-slide-to="@i"></li>
                    }
                </ol>
            </div>

            <!-- Wrapper for slides -->
            <div class="carousel-inner" role="listbox">
                @for (int i = 0; i < @Model.QuestionModels.Count; i++)
                {
                    string val = i == 0 ? "item active" : "item";
                    <div class="@val">
                        @Html.HiddenFor(m => m.QuestionModels[i].Question)
                        @Html.HiddenFor(m => m.QuestionModels[i].QuestionId)
                        <p><b>@Model.QuestionModels[i].Question</b></p>
                        @switch (Model.QuestionModels[i].Type)
                        {
                            case (Question.QuestionType.MultipleChoiceChooseOne):
                                @(Html.Partial("MultipleChoiceChooseOne", Model.QuestionModels[i]))
                                break;

                            case (Question.QuestionType.MultipleChoiceChooseMany):
                                @(Html.Partial("MultipleChoiceChooseMany", Model.QuestionModels[i]))
                                break;

                            case (Question.QuestionType.ShortAnswer):
                                @Html.TextAreaFor(m => m.QuestionModels[i].Answer)
                                break;

                            case (Question.QuestionType.Slider):
                                @(Html.Partial("SliderQuestion", Model.QuestionModels[i]))
                                break;

                            case (Question.QuestionType.ExhibitsChooseMany):
                                @(Html.Partial("ExhibitsChooseMany", Model.QuestionModels[i]))
                                break;

                            default:
                                @Html.HiddenFor(m => m.QuestionModels[i].Answer)
                                break;
                        }
                        @Html.HiddenFor(m => m.QuestionModels[i].Type)
                    </div>
                }
            </div>
        </div>
        <center>
            @{
                if (@Model.isPreview)
                {
                    <!-- TODO Change where these two buttons redirect to -->
                    @Html.ActionLink("Finish Editing and Save Survey", "Index", null, new { @class = "btn btn-default" })
                    @Html.ActionLink("Return to Editing", "Index", null, new { @class = "btn btn-default" })
                }
                else
                {
                    <input type="submit" class="btn btn-default" value="Complete Survey" />
                    @Html.ActionLink("Exit Survey", "Index", "Home", new { id = Model.SurveyId }, new { @class = "btn btn-default" })
                }
            }
        </center>
    </div>
}

@section scripts
{
    <script>
        $(".slider").slider();
        

        function sliderChanged(ele)
        {
            if (document.readyState === "complete") {

                //we have to delay so that the value has time to set to its end value
                setTimeout(function () {
                    console.log(ele.id);
                    var id = ele.id.replace("Slider", "Answer");
                    var newval = $("#" + ele.id).val();
                    console.log($("#" + id));
                    console.log(ele.value);
                    console.log(newval);
                    $("#" + id).val(ele.value);
                    console.log($("#" + id).val());
                }, 10);
                
            }
        }

        //------limiting checkbox selection-------------------
        var numClicks = 0;//makes it so that the alert shows for 5 secs after click no matter what
        var alert = $("#alert").first();

        function limitChecked(ele, max) {
            var numChecked = 0;
            var checkboxes = $(ele).closest(".checkboxes").find("input[type=checkbox]").each(
                function (index, ele) {
                    if (ele.checked)
                        numChecked++;
            });

            if (max > 0 && numChecked > max) {
                numClicks++;
                $(ele).attr('checked', false);

                $(alert).html("Cannot excede " + max + " selections.");
                $(alert).show();
                
                setTimeout(function () {
                    numClicks--;
                    if (numClicks == 0)
                        $(alert).hide();
                }, 5000);
            }
        }
    </script>
}

